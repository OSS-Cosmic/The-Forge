/*
 * Copyright (c) 2017-2024 The Forge Interactive Inc.
 *
 * This file is part of The-Forge
 * (see https://github.com/ConfettiFX/The-Forge).
 *
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
#pragma once
#ifndef TF_CONFIG_2_INCLUDE
#define TF_CONFIG_2_INCLUDE

#include <stdint.h>
#include <stdlib.h>

#configure TF_DEBUG

// Targets
#configure TF_TARGET_WIN11
#configure TF_TARGET_LINUX
#configure TF_TARGET_DARWIN
#configure TF_TARGET_ANDROID

#if defined(TF_TARGET_WIN11)
    #define TF_TARGET_WINDOWS
#endif

#configure TF_FEATURE_D3D12 
#configure TF_FEATURE_D3D11
#configure TF_FEATURE_VULKAN

#define TF_DEFAULT_LOG_LEVEL ${LOG_LEVEL}
#configure TF_ENABLE_LOGGING 
#configure TF_USE_MTUNER

#configure TF_ENABLE_MEMORY_TRACKING



#if (defined(TF_FEATURE_CPU_NEON) + defined(TF_FEATURE_CPU_SSE) + defined(TF_FEATURE_CPU_SCALAR)) == 0 

#configure TF_FEATURE_CPU_NEON 
#configure TF_FEATURE_CPU_SSE
#configure TF_FEATURE_CPU_SCALAR
  
  #if (defined(TF_FEATURE_CPU_NEON) + defined(TF_FEATURE_CPU_SSE) + defined(TF_FEATURE_CPU_SCALAR)) == 0 
    #if defined(TF_TARGET_DARWIN) && defined(__arm__)
          #define TF_FEATURE_CPU_NEON
    #elif defined(_MSC_VER)
        #if (defined(__AVX__) || defined(__AVX2__) || defined(_M_AMD64) || defined(_M_X64) || (_M_IX86_FP == 1) || (_M_IX86_FP == 2))
            #define TF_FEATURE_CPU_SSE
        #else
            #define TF_FEATURE_CPU_SCALAR
        #endif // SSE support
    #else // !_MSC_VER
        #if defined(__SSE__)
            #define TF_FEATURE_CPU_SSE
        #elif defined(__ANDROID__)
            #if defined(ANDROID_ARM_NEON)
                #define TF_FEATURE_CPU_NEON
            #else
                #define TF_FEATURE_CPU_SCALAR
            #endif
        #elif defined(__arm64) || defined(__aarch64__) || defined(__arm__ )
            #define TF_FEATURE_CPU_NEON
        #else
            #define TF_FEATURE_CPU_SCALAR
        #endif // __SSE__
    #endif // _MSC_VER
  #endif
#endif


#endif
