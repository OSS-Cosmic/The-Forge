load("@prelude//toolchains:genrule.bzl", "system_genrule_toolchain")
load("@prelude//toolchains:python.bzl", "system_python_bootstrap_toolchain", "system_python_toolchain")
load("@prelude//toolchains/msvc:tools.bzl", "find_msvc_tools")
load("@prelude//toolchains/cxx/clang:tools.bzl", "path_clang_tools")
load("@prelude//toolchains:cxx.bzl", "cxx_tools_info_toolchain")


find_msvc_tools(
    name = "msvc_tools",
    target_compatible_with = ["config//os:windows"],
    visibility = ["PUBLIC"],
)

path_clang_tools(
    name = "clang_tools",
    target_compatible_with = ["config//os:linux"],
    visibility = ["PUBLIC"],
)

system_python_toolchain(
    name = "python",
    visibility = ["PUBLIC"],
)

cxx_tools_info_toolchain(
    name = "cxx",
    cxx_tools_info = select({
        "config//os:linux": ":clang_tools",
        "config//os:windows": ":msvc_tools",
    }),  
    c_flags = select({
        "config//os:linux": [],
        #Copied from the C++ flags
        "config//os:windows": [
            "/c",
            "/Z7",
            "/nologo",
            "/W3",
            "/WX-",
            "/diagnostics:column",
            "/EHsc",
            "/permissive-",
            "/TC",
        ],
    }), 
    cxx_flags = select({
        "config//os:linux": [],
        "config//os:windows": [   
            "/std:c++14",
            "/c",
            "/Z7",
            "/nologo",
            "/W3",
            "/WX-",
            "/diagnostics:column",
            #"/D_CONSOLE",
            #"/D_UNICODE",
            "/EHsc",
            #"/Zc:forScope",
            #"/Zc:inline",
            "/permissive-",
            "/TP",
        ]
    }),
    link_flags = select({
        "config//os:linux": [],
        "config//os:windows": [
            "/NOLOGO",
            "/DEBUG",
            "/INCREMENTAL:NO",
            "/VERBOSE",
          #C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\
          "/LIBPATH:\\\'C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\\\\'",
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\Shell32.Lib",
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\kernel32.lib",
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\User32.Lib", 
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\gdi32.lib",
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\Ole32.lib",
          "C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x64\\OleAut32.lib",
          "Xinput.lib",
        ],
    }),
    visibility = ["PUBLIC"],
)

system_genrule_toolchain(
    name = "genrule",
    visibility = ["PUBLIC"],
)

system_python_bootstrap_toolchain(
    name = "python_bootstrap",
    visibility = ["PUBLIC"],
)
